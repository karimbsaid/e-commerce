# Étape de construction (builder) avec PHP et Node.js
FROM node:18 AS builder

WORKDIR /app

# Copier les fichiers nécessaires
COPY package.json package-lock.json vite.config.js ./
COPY resources/ resources/
COPY database/ database/
COPY composer.json composer.lock ./
RUN mkdir -p public/build


# Installer les dépendances Node.js
RUN npm install && npm run build

# Installer Composer
FROM composer:2.6 AS composer_builder
WORKDIR /app
COPY . .
RUN composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader

# Étape finale (production)
FROM php:8.3-fpm-alpine

# Installer les packages nécessaires
RUN apk add --no-cache \
    nginx \
    supervisor \
    mysql-client \
    libpng-dev \
    libzip-dev \
    zip \
    nodejs npm # Ajout de Node.js si nécessaire

# Installer les extensions PHP
RUN docker-php-ext-install pdo_mysql exif pcntl bcmath gd zip

# Copier les fichiers de l'étape composer et builder
COPY --from=composer_builder /app /var/www/html
COPY --from=builder /app /var/www/html/public/build /var/www/html/public/build

# Copier uniquement `.env.production` explicitement

# Copier les fichiers de configuration
COPY docker/prod/nginx.conf /etc/nginx/nginx.conf
COPY docker/prod/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Assurer les bons droits pour Laravel
RUN chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache

# Exposer le port 80
EXPOSE 80

# Démarrer Supervisor
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
